# Android 8.0 build image
FROM ubuntu:14.04

# ubuntu env
RUN dpkg --add-architecture i386 && apt-get update \
    && apt-get -y install lib32z1 lib32ncurses5 lib32bz2-1.0 aria2 \
# aosp compile env
    && aria2c -x4 http://old-releases.ubuntu.com/ubuntu/pool/universe/o/openjdk-8/openjdk-8-jre-headless_8u45-b14-1_amd64.deb \
    && aria2c -x4 http://old-releases.ubuntu.com/ubuntu/pool/universe/o/openjdk-8/openjdk-8-jre_8u45-b14-1_amd64.deb \
    && aria2c -x4 http://old-releases.ubuntu.com/ubuntu/pool/universe/o/openjdk-8/openjdk-8-jdk_8u45-b14-1_amd64.deb \
    && dpkg -i *.deb || apt-get -f -y install && rm -rf *.deb \
    && apt-get -y install git-core gnupg flex bison gperf build-essential zip curl zlib1g-dev gcc-multilib \
        g++-multilib libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev ccache \
        libgl1-mesa-dev libxml2-utils xsltproc unzip python vim bc genisoimage realpath \
# clean apt and tmp file
    && apt-get purge -y --auto-remove \
    && apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

COPY entrypoint.sh /usr/bin/

ENV USER buildserver

# Add a user and group - buildserver:buildserver
RUN useradd ${USER} -m -U \
    && mkdir -p /data

USER ${USER}
RUN mkdir -p ${HOME}/bin \
    && curl https://storage.googleapis.com/git-repo-downloads/repo > ${HOME}/bin/repo \
    && chmod +x ${HOME}/bin/repo \
    && git config --global core.editor vim

VOLUME /data
WORKDIR /data

ENTRYPOINT ["entrypoint.sh"]
CMD ["bash", "--login"]
